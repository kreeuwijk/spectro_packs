apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
    helm.sh/resource-policy: keep
  labels:
    dpu.nvidia.com/component: dpf-operator-controller-manager
  name: dpuserviceconfigurations.svc.dpu.nvidia.com
spec:
  group: svc.dpu.nvidia.com
  names:
    kind: DPUServiceConfiguration
    listKind: DPUServiceConfigurationList
    plural: dpuserviceconfigurations
    singular: dpuserviceconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          DPUServiceConfiguration is the Schema for the dpuserviceconfigurations API. This object is intended to be used in
          conjunction with a DPUDeployment object. This object is the template from which the DPUService will be created. It
          contains all configuration options from the user to be provided to the service itself via the helm chart values.
          This object doesn't allow configuration of nodeSelector and resources in purpose as these are delegated to the
          DPUDeployment and DPUServiceTemplate accordingly.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DPUServiceConfigurationSpec defines the desired state of
              DPUServiceConfiguration
            properties:
              deploymentServiceName:
                description: |-
                  DeploymentServiceName is the name of the DPU service this configuration refers to. It must match
                  .spec.deploymentServiceName of a DPUServiceTemplate object and one of the keys in .spec.services of a
                  DPUDeployment object.
                type: string
              interfaces:
                description: Interfaces specifies the DPUServiceInterface to be generated
                  for the generated DPUService.
                items:
                  description: ServiceInterfaceTemplate contains the information related
                    to an interface of the DPUService
                  properties:
                    name:
                      description: Name is the name of the interface
                      type: string
                    network:
                      description: |-
                        Network is the Network Attachment Definition in the form of "namespace/name"
                        or just "name" if the namespace is the same as the namespace the pod is running.
                      type: string
                  required:
                  - name
                  - network
                  type: object
                maxItems: 50
                minItems: 1
                type: array
              serviceConfiguration:
                description: ServiceConfiguration contains fields that are configured
                  on the generated DPUService.
                properties:
                  deployInCluster:
                    description: DeployInCluster indicates if the DPUService Helm
                      Chart will be deployed on the Host cluster. Default to false.
                    type: boolean
                  helmChart:
                    description: |-
                      HelmChart reflects the Helm related configuration. The user is supposed to configure values specific to that
                      DPUServiceConfiguration used in a DPUDeployment and should not specify values that could be shared across multiple
                      DPUDeployments using different DPUServiceConfigurations. These values are merged with values specified in the
                      DPUServiceTemplate. In case of conflict, the DPUServiceConfiguration values take precedence.
                    properties:
                      values:
                        description: Values specifies Helm values to be passed to
                          Helm template, defined as a map. This takes precedence over
                          Values.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  serviceDaemonSet:
                    description: ServiceDaemonSet contains settings related to the
                      underlying DaemonSet that is part of the Helm chart
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations specifies annotations which are added
                          to the ServiceDaemonSet.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels specifies labels which are added to the
                          ServiceDaemonSet.
                        type: object
                    type: object
                type: object
            required:
            - deploymentServiceName
            type: object
          status:
            description: DPUServiceConfigurationStatus defines the observed state
              of DPUServiceConfiguration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
