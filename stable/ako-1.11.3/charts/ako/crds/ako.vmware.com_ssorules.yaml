apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: ssorules.ako.vmware.com
spec:
  conversion:
    strategy: None
  group: ako.vmware.com
  names:
    kind: SSORule
    listKind: SSORuleList
    plural: ssorules
    shortNames:
    - ssorule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the SSORule object.
      jsonPath: .status.status
      name: Status
      type: string
    - description: Creation timestamp of the SSORule object.
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            oneOf:
            - required:
              - oauthVsConfig
            - required:
              - samlSpConfig
            properties:
              fqdn:
                description: Fqdn to be used to apply the SSORule CRD object to a
                  virtual service. The virtual service should host the Fqdn mentioned
                  in this field.
                type: string
              oauthVsConfig:
                description: VirtualService specific OAuth config.
                properties:
                  cookieName:
                    description: HTTP cookie name for authorized session.
                    type: string
                  cookieTimeout:
                    default: 60
                    description: HTTP cookie timeout for authorized session.
                    maximum: 1440
                    minimum: 1
                    type: integer
                  logoutURI:
                    description: URI which triggers OAuth logout.
                    type: string
                  oauthSettings:
                    description: Application and IDP settings for OAuth/OIDC.
                    items:
                      properties:
                        appSettings:
                          description: Application-specific OAuth config.
                          properties:
                            clientID:
                              description: Application specific identifier.
                              type: string
                            clientSecret:
                              description: Name of Kubernetes secret object that should
                                specify the application specific identifier secret
                                in 'clientSecret' data field
                              type: string
                            oidcConfig:
                              description: OpenID Connect specific configuration.
                              properties:
                                oidcEnable:
                                  description: Adds openid as one of the scopes enabling
                                    OpenID Connect flow.
                                  type: boolean
                                profile:
                                  default: true
                                  description: Fetch profile information by enabling
                                    profile scope.
                                  type: boolean
                                userinfo:
                                  description: Fetch profile information from Userinfo
                                    Endpoint.
                                  type: boolean
                              type: object
                            scopes:
                              description: Scope specified to give limited access
                                to the app.
                              items:
                                type: string
                              type: array
                          required:
                          - clientID
                          - clientSecret
                          type: object
                        authProfileRef:
                          description: Auth Profile to use for validating users
                          type: string
                        resourceServer:
                          description: Resource Server OAuth config.
                          oneOf:
                          - required:
                            - jwtParams
                          - required:
                            - opaqueTokenParams
                          properties:
                            accessType:
                              description: Access token type.
                              enum:
                              - ACCESS_TOKEN_TYPE_JWT
                              - ACCESS_TOKEN_TYPE_OPAQUE
                              type: string
                            introspectionDataTimeout:
                              default: 0
                              description: Lifetime of the cached introspection data.
                              maximum: 1440
                              minimum: 0
                              type: integer
                            jwtParams:
                              description: Validation parameters to be used when access
                                token type is JWT.
                              properties:
                                audience:
                                  description: Audience parameter used for validation
                                    using JWT token.
                                  type: string
                              required:
                              - audience
                              type: object
                            opaqueTokenParams:
                              description: Validation parameters to be used when access
                                token type is opaque.
                              properties:
                                serverID:
                                  description: Resource server specific identifier
                                    used to validate against introspection endpoint
                                    when access token is opaque.
                                  type: string
                                serverSecret:
                                  description: Name of Kubernetes secret object that
                                    should specify the resource server specific password/secret
                                    in 'serverSecret' data field
                                  type: string
                              required:
                              - serverID
                              - serverSecret
                              type: object
                          required:
                          - accessType
                          type: object
                      required:
                      - authProfileRef
                      type: object
                    type: array
                  postLogoutRedirectURI:
                    description: URI to which IDP will redirect to after the logout.
                    type: string
                  redirectURI:
                    description: Redirect URI specified in the request to Authorization
                      Server.
                    type: string
                type: object
              samlSpConfig:
                description: Application-specific SAML config.
                properties:
                  acsIndex:
                    description: Index to be used in the AssertionConsumerServiceIndex
                      attribute of the Authentication request, if the authnReqAcsType
                      is set to Use AssertionConsumerServiceIndex
                    maximum: 64
                    minimum: 0
                    type: integer
                  authnReqAcsType:
                    description: 'Option to set the ACS attributes in the AuthnRequest '
                    enum:
                    - SAML_AUTHN_REQ_ACS_TYPE_URL
                    - SAML_AUTHN_REQ_ACS_TYPE_INDEX
                    - SAML_AUTHN_REQ_ACS_TYPE_NONE
                    type: string
                  cookieName:
                    description: HTTP cookie name for authenticated session.
                    type: string
                  cookieTimeout:
                    default: 60
                    description: Cookie timeout in minutes.
                    maximum: 1440
                    minimum: 1
                    type: integer
                  entityID:
                    description: Globally unique SAML entityID for this application
                      (Service Provider). The SAML application entity ID on the IDP
                      should match this.
                    type: string
                  signingSslKeyAndCertificateRef:
                    description: SP will use this SSL certificate to sign requests
                      going to the IdP and decrypt the assertions coming from IdP.
                    type: string
                  singleSignonURL:
                    description: SAML Single Signon endpoint to receive the Authentication
                      response. This also specifies the destination endpoint to be
                      configured for this application on the IDP. If the authnReqAcsType
                      is set to 'Use AssertionConsumerServiceURL', this endpoint will
                      be sent in the AssertionConsumerServiceURL attribute of the
                      Authentication request.
                    type: string
                  useIdpSessionTimeout:
                    description: By enabling this field IdP can control how long the
                      SP session can exist through the SessionNotOnOrAfter field in
                      the AuthNStatement of SAML Response.
                    type: boolean
                required:
                - authnReqAcsType
                - entityID
                - singleSignonURL
                type: object
              ssoPolicyRef:
                description: The SSO Policy attached to the virtualservice.
                type: string
            required:
            - fqdn
            - ssoPolicyRef
            type: object
          status:
            properties:
              error:
                type: string
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
