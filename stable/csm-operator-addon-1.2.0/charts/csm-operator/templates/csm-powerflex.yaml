{{- if eq .Values.csm.type "powerflex" }}
apiVersion: storage.dell.com/v1
kind: ContainerStorageModule
metadata:
  name: vxflexos
  namespace: {{ .Values.csm.namespace }}
spec:
  driver:
    csiDriverType: "powerflex"
    csiDriverSpec:
      # fsGroupPolicy: Defines if the underlying volume supports changing ownership and permission of the volume before being mounted.
      # Allowed values: ReadWriteOnceWithFSType, File , None
      # Default value: ReadWriteOnceWithFSType
      fSGroupPolicy: "{{ .Values.csm.config.driver.fSGroupPolicy }}"
    configVersion: "{{ include "csm-operator.powerflexVersion" (dict "lookup" "driver-config" "version" .Values.csm.version) }}"
    authSecret: {{ default .Values.csm.config.driver.authSecret "vxflexos-config" | quote }}
    replicas: {{ .Values.csm.config.driver.replicas }}
    dnsPolicy: {{ .Values.csm.config.driver.dnsPolicy }}
    forceUpdate: false
    forceRemoveDriver: true
    common:
      image: "dellemc/csi-vxflexos:{{ include "csm-operator.powerflexVersion" (dict "lookup" "driver-image" "version" .Values.csm.version) }}"
      imagePullPolicy: IfNotPresent
      envs:
{{ toYaml .Values.csm.config.driver.envs | indent 8 }}
        # Specify kubelet config dir path.
        # Ensure that the config.yaml file is present at this path.
        # Default value: None
        - name: KUBELET_CONFIG_DIR
          value: "/var/lib/kubelet"
        - name: "CERT_SECRET_COUNT"
          value: "0"

    sideCars:
{{ toYaml .Values.csm.config.driver.sideCars | indent 6 }}

    controller:
      envs:
{{ toYaml .Values.csm.config.controller.envs | indent 8 }}

      #"controller.nodeSelector" defines what nodes would be selected for pods of controller deployment
      # Leave as blank to use all nodes
      # Allowed values: map of key-value pairs
      # Default value: None
      nodeSelector:
{{ toYaml .Values.csm.config.controller.nodeSelector | indent 8 }}
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint
      #  node-role.kubernetes.io/master: ""
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      #  node-role.kubernetes.io/control-plane: ""

      # "controller.tolerations" defines tolerations that would be applied to controller deployment
      # Leave as blank to install controller on worker nodes
      # Default value: None
      tolerations:
{{ toYaml .Values.csm.config.controller.tolerations | indent 8 }}
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint 
      # - key: "node-role.kubernetes.io/master"   
      #   operator: "Exists"
      #   effect: "NoSchedule"
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint 
      # - key: "node-role.kubernetes.io/control-plane"   
      #   operator: "Exists"
      #   effect: "NoSchedule"

    node:
      envs:
{{ toYaml .Values.csm.config.node.envs | indent 8 }}

      # "node.nodeSelector" defines what nodes would be selected for pods of node daemonset
      # Leave as blank to use all nodes
      # Allowed values: map of key-value pairs
      # Default value: None
      nodeSelector:
{{ toYaml .Values.csm.config.node.nodeSelector | indent 8 }}
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint
      #  node-role.kubernetes.io/master: ""
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
      #  node-role.kubernetes.io/control-plane: ""

      # "node.tolerations" defines tolerations that would be applied to node daemonset
      # Leave as blank to install node driver only on worker nodes
      # Default value: None
      tolerations:
{{ toYaml .Values.csm.config.node.tolerations | indent 8 }}
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/master taint
      # - key: "node-role.kubernetes.io/master"   
      #   operator: "Exists"
      #   effect: "NoSchedule"
      # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint 
      # - key: "node-role.kubernetes.io/control-plane"   
      #   operator: "Exists"
      #   effect: "NoSchedule"

    initContainers:
      - image: dellemc/sdc:3.6.0.6
        imagePullPolicy: IfNotPresent
        name: sdc
        envs:
          - name: MDM
            value: "" # Set by CSM Operator

  modules:
    # Authorization: enable csm-authorization for RBAC
    - name: authorization
      # enable: Enable/Disable csm-authorization
      enabled: {{ .Values.csm.config.modules.authorization.enabled }}
      configVersion: "{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-auth-config" "version" .Values.csm.version) }}"
      components:
      - name: karavi-authorization-proxy
        image: "dellemc/csm-authorization-sidecar:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-auth-image" "version" .Values.csm.version) }}"
        envs:
{{ toYaml .Values.csm.config.modules.authorization.envs | indent 10 }}

    # observability: allows to configure observability
    - name: observability
      # enabled: Enable/Disable observability
      enabled: {{ .Values.csm.config.modules.observability.enabled }}
      configVersion: "{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-obsv-config" "version" .Values.csm.version) }}"
      components:
        - name: topology
          # enabled: Enable/Disable topology
          enabled: {{ .Values.csm.config.modules.observability.topology.enabled }}
          # image: Defines karavi-topology image. This shouldn't be changed
          # Allowed values: string
          image: "dellemc/csm-topology:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-obsv-image" "version" .Values.csm.version) }}"
          envs:
{{ toYaml .Values.csm.config.modules.observability.topology.envs | indent 12 }}

        - name: otel-collector
          # enabled: Enable/Disable OpenTelemetry Collector
          enabled: {{ .Values.csm.config.modules.observability.otelCollector.enabled }}
          # image: Defines otel-collector image. This shouldn't be changed
          # Allowed values: string
          image: otel/opentelemetry-collector:0.42.0
          envs:
{{ toYaml .Values.csm.config.modules.observability.otelCollector.envs | indent 12 }}

        - name: cert-manager
        # enabled: Enable/Disable cert-manager
        # Allowed values:
        #   true: enable deployment of cert-manager
        #   false: disable deployment of cert-manager only if it's already deployed
        # Default value: false
          enabled: false

        - name: metrics-powerflex
          # enabled: Enable/Disable PowerFlex metrics
          enabled: {{ .Values.csm.config.modules.observability.metricsPowerflex.enabled }}
          # image: Defines PowerFlex metrics image. This shouldn't be changed
          image: "dellemc/csm-metrics-powerflex:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-metrics-image" "version" .Values.csm.version) }}"
          envs:
{{ toYaml .Values.csm.config.modules.observability.metricsPowerflex.envs | indent 12 }}

    # Replication: allows to configure replication
    # Replication CRDs must be installed before installing driver
    - name: replication
      # enabled: Enable/Disable replication feature
      # Allowed values:
      #   true: enable replication feature(install dell-csi-replicator sidecar)
      #   false: disable replication feature(do not install dell-csi-replicator sidecar)
      # Default value: false
      enabled: {{ .Values.csm.config.modules.replication.enabled }}
      configVersion: "{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-repl-config" "version" .Values.csm.version) }}"
      components:
      - name: dell-csi-replicator
        # image: Image to use for dell-csi-replicator. This shouldn't be changed
        # Allowed values: string
        # Default value: None
        image: "dellemc/dell-csi-replicator:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-repl-image-replicator" "version" .Values.csm.version) }}"
        envs:
{{ toYaml .Values.csm.config.modules.replication.dellCsiReplicator.envs | indent 10 }}

      - name: dell-replication-controller-manager
        # image: Defines controller image. This shouldn't be changed
        # Allowed values: string
        image: "dellemc/dell-replication-controller:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-repl-image-controller" "version" .Values.csm.version) }}"
        envs:
{{ toYaml .Values.csm.config.modules.replication.dellReplicationControllerManager.envs | indent 10 }}

      - name: dell-replication-controller-init
        # image: Defines replication init container image. This shouldn't be changed
        # Allowed values: string
        image: "dellemc/dell-replication-init:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-repl-image-init" "version" .Values.csm.version) }}"

    - name: resiliency
      # enabled: Enable/Disable Resiliency feature
      # Allowed values:
      #   true: enable Resiliency feature(deploy podmon sidecar)
      #   false: disable Resiliency feature(do not deploy podmon sidecar)
      # Default value: false
      enabled: {{ .Values.csm.config.modules.resiliency.enabled }}
      configVersion: "{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-resiliency-config" "version" .Values.csm.version) }}"
      components:
        - name: podmon-controller
          image: "dellemc/podmon:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-resiliency-image-podmon" "version" .Values.csm.version) }}"
          imagePullPolicy: IfNotPresent
          args:
{{ toYaml .Values.csm.config.modules.resiliency.podmonController.args | indent 12 }}
            # Below 3 args should not be modified.
            - "--csisock=unix:/var/run/csi/csi.sock"
            - "--mode=controller"
            - "--driver-config-params=/vxflexos-config-params/driver-config-params.yaml"
        - name: podmon-node
          image: "dellemc/podmon:{{ include "csm-operator.powerflexVersion" (dict "lookup" "module-resiliency-image-podmon" "version" .Values.csm.version) }}"
          imagePullPolicy: IfNotPresent
          envs:
{{ toYaml .Values.csm.config.modules.resiliency.podmonNode.envs | indent 12 }}
          args:
{{ toYaml .Values.csm.config.modules.resiliency.podmonNode.args | indent 12 }}
            # Below 3 args should not be modified.
            - "--csisock=unix:/var/lib/kubelet/plugins/vxflexos.emc.dell.com/csi_sock"
            - "--mode=node"
            - "--driver-config-params=/vxflexos-config-params/driver-config-params.yaml"
{{- end }}