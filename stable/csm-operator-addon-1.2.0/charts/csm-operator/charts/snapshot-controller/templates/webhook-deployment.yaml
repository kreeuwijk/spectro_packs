{{- if .Values.webhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snapshot-validation-deployment
  namespace: kube-system 
  labels:
    app: snapshot-validation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snapshot-validation
  template:
    metadata:
      labels:
        app: snapshot-validation
    spec:
      serviceAccountName: snapshot-webhook
      containers:
      - name: snapshot-validation
        image: "{{ .Values.webhook.image.repository }}:{{ .Values.webhook.image.tag }}"
        imagePullPolicy: {{ .Values.webhook.image.pullPolicy | default "IfNotPresent" }}
        args: ['--tls-cert-file=/etc/snapshot-validation-webhook/certs/tls.crt', '--tls-private-key-file=/etc/snapshot-validation-webhook/certs/tls.key']
        ports:
        - containerPort: 443 
        volumeMounts:
          - name: snapshot-validation-webhook-certs
            mountPath: /etc/snapshot-validation-webhook/certs
            readOnly: true
      volumes:
        - name: snapshot-validation-webhook-certs
          secret:
            secretName: snapshot-validation-secret
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kube-system/volume-snapshot-cert
  name: "validation-webhook.snapshot.storage.k8s.io"
webhooks:
- name: "validation-webhook.snapshot.storage.k8s.io"
  rules:
  - apiGroups:   ["snapshot.storage.k8s.io"]
    apiVersions: ["v1"]
    operations:  ["CREATE", "UPDATE"]
    resources:   ["volumesnapshots", "volumesnapshotcontents", "volumesnapshotclasses"]
    scope:       "*"
  clientConfig:
    service:
      namespace: "kube-system"
      name: "snapshot-validation-service"
      path: "/volumesnapshot"
      port: {{ .Values.webhook.service.port }}
  admissionReviewVersions: ["v1"]
  sideEffects: None
  failurePolicy: Fail 
  timeoutSeconds: 2 
{{- end }}