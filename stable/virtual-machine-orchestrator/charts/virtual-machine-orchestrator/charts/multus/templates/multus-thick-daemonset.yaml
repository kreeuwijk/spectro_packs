apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-multus-ds
  namespace: kube-system
  labels:
    tier: node
    app: multus
    name: multus
    {{- include "multus.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      name: multus
      {{- include "multus.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        tier: node
        app: multus
        name: multus
        {{- include "multus.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: true
      hostPID: true
      tolerations:
        - operator: Exists
          effect: NoSchedule
        - operator: Exists
          effect: NoExecute
      serviceAccountName: multus
      containers:
        - name: kube-multus
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          command: [ "/usr/src/multus-cni/bin/multus-daemon" ]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /host/etc/cni/net.d
            name: cni
          - mountPath: /host/run
            name: host-run
          - mountPath: /var/lib/cni/multus
            name: host-var-lib-cni-multus
          - mountPath: /var/lib/kubelet
            name: host-var-lib-kubelet
          - mountPath: /run/k8s.cni.cncf.io
            name: host-run-k8s-cni-cncf-io
          - mountPath: /run/netns
            mountPropagation: HostToContainer
            name: host-run-netns
          - mountPath: /etc/cni/net.d/multus.d
            name: multus-daemon-config
            readOnly: true
          - mountPath: /hostroot
            mountPropagation: HostToContainer
            name: hostroot
      initContainers:
        - name: install-multus-binary
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          command:
            - "cp"
            - "/usr/src/multus-cni/bin/multus-shim"
            - "/host/opt/cni/bin/multus-shim"
          resources:
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            mountPropagation: Bidirectional
            name: cnibin
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /etc/cni/net.d
          type: ""
        name: cni
      - hostPath:
          path: /opt/cni/bin
          type: ""
        name: cnibin
      - hostPath:
          path: /
          type: ""
        name: hostroot
      - configMap:
          defaultMode: 420
          items:
          - key: daemon-config.json
            path: daemon-config.json
          name: multus-daemon-config
        name: multus-daemon-config
      - hostPath:
          path: /run
          type: ""
        name: host-run
      - hostPath:
          path: /var/lib/cni/multus
          type: ""
        name: host-var-lib-cni-multus
      - hostPath:
          path: /var/lib/kubelet
          type: ""
        name: host-var-lib-kubelet
      - hostPath:
          path: /run/k8s.cni.cncf.io
          type: ""
        name: host-run-k8s-cni-cncf-io
      - hostPath:
          path: /run/netns/
          type: ""
        name: host-run-netns
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
